{
  "openapi": "3.0.1",
  "info": {
    "title": "Groupomania API",
    "description": "Groupomania social media API documentation",
    "contact": {
      "email": "nssmhttb@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api"
    }
  ],
  "tags": [
    {
      "name": "user",
      "description": "Operations about user"
    },
    {
      "name": "post",
      "description": "Operation about post"
    },
    {
      "name": "comment",
      "description": "Operation about commentary"
    }
  ],
  "paths": {
    "/user/signup": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "Create new user",
        "operationId": "createUser",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successfully operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "User was created succesfuly"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Logs in user",
        "operationId": "loginUser",
        "description": "return user and **access_token** & **refrsh_token** cookie & **xsrfToken** in body",
        "requestBody": {
          "description": "Login user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successfully authenticated.",
            "headers": {
              "Set-Cookie": {
                "description": "Acess json web token in cookie `access_token` (httpOnly)",
                "schema": {
                  "type": "string"
                }
              },
              "~Set-Cookie": {
                "description": "Refresh token in cookie `refresh_token` (httpOnly)",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs out current logged user",
        "operationId": "logoutUser",
        "responses": {
          "204": {
            "description": "successfully operation",
            "content": {}
          }
        }
      }
    },
    "/user/refresh-token": {
      "get": {
        "tags": [
          "user"
        ],
        "description": "This can only be done by the logged in user. Add xsrf token in **Authorize**",
        "summary": "Refresh json web token current logged user",
        "operationId": "refreshToken",
        "security": [
          {
            "cookieAuth": [],
            "refreshToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "successfully operation",
            "headers": {
              "Set-Cookie": {
                "description": "Acess json web token in cookie `access_token` (httpOnly)",
                "schema": {
                  "type": "string"
                }
              },
              "~Set-Cookie": {
                "description": "Refresh token in cookie `refresh_token` (httpOnly)",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Fetch user by id",
        "description": "This can only be done by the logged in user. Add xsrf token in **Authorize**",
        "operationId": "getUserById",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "name": "id",
            "in": "path",
            "description": "User uuid",
            "required": true
          }
        ],
        "security": [
          {
            "accessToken": [],
            "xsrfToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "successfully operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserByIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete currently logged user",
        "description": "This can only be done by the logged in user. Add xsrf token in **Authorize**",
        "operationId": "deleteUser",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "name": "id",
            "in": "path",
            "description": "User uuid",
            "required": true
          }
        ],
        "security": [
          {
            "accessToken": [],
            "xsrfToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "successfully opetation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpMessage"
                }
              }
            }
          },
          "400": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update currently logged user",
        "description": "This can only be done by the logged in user. Add xsrf token in **Authorize**",
        "operationId": "updateUser",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "name": "id",
            "in": "path",
            "description": "User uuid",
            "required": true
          }
        ],
        "security": [
          {
            "accessToken": [],
            "xsrfToken": []
          }
        ],
        "requestBody": {
          "description": "Updated user object",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successfully operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/user/password-forgot": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Forgotten password request",
        "description": "Request to send an email to reset the forgotten password",
        "operationId": "forgottenPassword",
        "requestBody": {
          "description": "User email",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepeted operation",
            "content": {
              "apllication/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "apllication/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user/password-reset": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Reset password",
        "description": "Request to update the forgotten password with a token received by email",
        "operationId": "ResetPassword",
        "requestBody": {
          "description": "New password and token received by email",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string"
                  },
                  "confirmPassword": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "successfully operation",
            "content": {
              "apllication/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "apllication/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/posts/": {
      "get": {
        "tags": [
          "post"
        ],
        "description": "This can only be done by the logged in user. Add xsrf token in **Authorize**",
        "summary": "Fetch all posts",
        "operationId": "getAllPosts",
        "security": [
          {
            "accessToken": [],
            "xsrfToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "successfully operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllPostsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "post"
        ],
        "description": "This can only be done by the logged in user. Add xsrf token in **Authorize**",
        "summary": "Create new post",
        "operationId": "createPost",
        "security": [
          {
            "accessToken": [],
            "xsrfToken": []
          }
        ],
        "requestBody": {
          "description": "Update post object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreatePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successfully operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPostByIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/posts/{id}": {
      "parameters": [
        {
          "name": "id",
          "description": "id post",
          "required": true,
          "in": "path",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "get": {
        "tags": [
          "post"
        ],
        "description": "This can only be done by the logged in user. Add xsrf token in **Authorize**",
        "summary": "Fetch post by id",
        "operationId": "getPostById",
        "security": [
          {
            "accessToken": [],
            "xsrfToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "successfully operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPostByIdResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "post"
        ],
        "description": "This can only be done by the logged in user and the post is owned by the user. Add xsrf token in **Authorize**",
        "summary": "Update post by id",
        "operationId": "updatePost",
        "security": [
          {
            "accessToken": [],
            "xsrfToken": []
          }
        ],
        "requestBody": {
          "description": "Update post object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreatePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successfully operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "post"
        ],
        "description": "This can only be done by the logged in user and the post is owned by the user. Add xsrf token in **Authorize**",
        "summary": "Delete post by id",
        "operationId": "deletePost",
        "security": [
          {
            "accessToken": [],
            "xsrfToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "successfully operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/posts/like/{id}": {
      "post": {
        "tags": [
          "post"
        ],
        "security": [
          {
            "accessToken": [],
            "xsrfToken": []
          }
        ],
        "description": "This can only be done by the logged in user. Add xsrf token in **Authorize**",
        "summary": "Like post by id",
        "operationId": "likePost",
        "parameters": [
          {
            "name": "id",
            "description": "id post",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successfully operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/comments/{id}": {
      "get": {
        "tags": [
          "comment"
        ],
        "description": "This can only be done by the logged in user. Add xsrf token in **Authorize**",
        "summary": "get comment by id",
        "operationId": "getCommentById",
        "parameters": [
          {
            "name": "id",
            "description": "comment id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "security": [
          {
            "accessToken": [],
            "xsrfToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "successfully operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCommentById"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "comment"
        ],
        "description": "This can only be done by the logged in user and the comment is owned by the user. Add xsrf token in **Authorize**",
        "summary": "Create comment by post id",
        "operationId": "createComment",
        "security": [
          {
            "accessToken": [],
            "xsrfToken": []
          }
        ],
        "requestBody": {
          "description": "Create new comment object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreatePost"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "successfully operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCommentById"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "comment"
        ],
        "description": "This can only be done by the logged in user and the comment is owned by the user. Add xsrf token in **Authorize**",
        "summary": "Update comment by id",
        "operationId": "updateComment",
        "security": [
          {
            "accessToken": [],
            "xsrfToken": []
          }
        ],
        "requestBody": {
          "description": "Update comment object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreatePost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successfully operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCommentById"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "comment"
        ],
        "description": "This can only be done by the logged in user and the comment is owned by the user. Add xsrf token in **Authorize**",
        "summary": "Delete post by id",
        "operationId": "deletePost",
        "security": [
          {
            "accessToken": [],
            "xsrfToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "successfully operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SignUpRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          },
          "confirmPassword": {
            "type": "string"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/User"
          }
        ],
        "properties":{
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "expiresAt": {
            "type": "integer"
          },
          "xsrfToken": {
            "type": "string"
          }
        }
      },
      "GetUserByIdResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/User"
          }
        ],
        "properties": {
          "Posts": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Post"
                },
                {
                  "properties": {
                    "comment_count": {
                      "type": "integer"
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "UpdateUserRequest": {
        "required": [
          "firstName",
          "lastName",
          "email",
          "currentPassword"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "currentPassword": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          },
          "confirmNewPassword": {
            "type": "string"
          },
          "profilePicture": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "HttpErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              }
            }
          }
        }
      },
      "ValidationErrorResponse": {
        "type": "object",
        "properties": {
          "validationError": {
            "type": "object",
            "properties": {
              "propertyName": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "context": {
                    "type": "array",
                    "items": {
                      "minItems": 1,
                      "type": "object",
                      "required": [
                        "label",
                        "value",
                        "invalids",
                        "key"
                      ],
                      "properties": {
                        "label": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        },
                        "invalids": {
                          "type": "array",
                          "items": {
                            "minItems": 1,
                            "required": [
                              "invalid"
                            ]
                          },
                          "properties": {
                            "invalid": {
                              "type": "string"
                            }
                          }
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "type": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "GetAllPostsResponse": {
        "type": "array",
        "items": {
          "minItems": 1,
          "type": "object",
          "required": [
            "id",
            "content",
            "media",
            "createdAt",
            "updatedAt",
            "commentsCount",
            "User"
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "content": {
              "type": "string"
            },
            "media": {
              "type": "string"
            },
            "createdAt": {
              "type": "string",
              "format": "date"
            },
            "updatedAt": {
              "type": "string",
              "format": "date"
            },
            "commentsCount": {
              "type": "integer"
            },
            "User": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "GetPostByIdResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "User": {
            "$ref": "#/components/schemas/User"
          },
          "Comment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Comment"
            }
          }
        }
      },
      "GetCommentById": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "media": {
            "type": "string",
            "nullable": true
          },
          "mediaType": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          },
          "User": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "createdAt":{
            "type": "string",
            "format": "date-time"
          },
          "updatedAt":{
            "type": "string",
            "format": "date-time"
          },
          "bio":{
            "type": "string",
            "nullable": true
          },
          "profilePicture":{
            "type": "string",
            "nullable": true
          }
        }
      },
      "Post": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "content": {
            "type": "string"
          },
          "media": {
            "type": "string",
            "format": "binary"
          },
          "mediaType": {
            "type": "string"
          },
          "likes": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "CreatePost": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "media": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "Comment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "User": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "HttpMessage": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "accessToken": {
        "type": "apiKey",
        "in": "cookie",
        "name": "access_token"
      },
      "refreshToken": {
        "type": "apiKey",
        "in": "cookie",
        "name": "refrsh_token"
      },
      "xsrfToken": {
        "type": "apiKey",
        "in": "header",
        "name": "x-xsrf-token"
      },
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    }
  }
}