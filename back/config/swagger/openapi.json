{
  "openapi": "3.0.1",
  "info": {
    "title": "Groupomania API",
    "description": "Groupomania social media API documentation",
    "contact": {
      "email": "nssmhttb@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:3000/api"
    }
  ],
  "tags": [
    {
      "name": "user",
      "description": "Operations about user"
    },
    {
      "name": "post",
      "description": "Operation about post"
    }
  ],
  "paths": {
    "/user/signup": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "Create new user",
        "operationId": "createUser",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successfully operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "User was created succesfuly"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Logs in user",
        "operationId": "loginUser",
        "description": "Logs in user and returns the authentication cookie contain JWT",
        "requestBody": {
          "description": "Login user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successfully authenticated.",
            "headers": {
              "Set-Cookie": {
                "description": "Acess json web token in cookie `access_token` (httpOnly)",
                "schema": {
                  "type": "string"
                }
              },
              "~Set-Cookie": {
                "description": "Refresh token in cookie `refresh_token` (httpOnly)",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs out current logged user",
        "operationId": "logoutUser",
        "responses": {
          "204": {
            "description": "successfully operation",
            "content": {}
          }
        }
      }
    },
    "/user/refresh-token": {
      "get": {
        "tags": [
          "user"
        ],
        "description": "This can only be done by the logged in user.",
        "summary": "Refresh json web token current logged user",
        "operationId": "refreshToken",
        "security": [
          {
            "cookieAuth": [],
            "refreshToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "successfully operation",
            "headers": {
              "Set-Cookie": {
                "description": "Acess json web token in cookie `access_token` (httpOnly)",
                "schema": {
                  "type": "string"
                }
              },
              "~Set-Cookie": {
                "description": "Refresh token in cookie `refresh_token` (httpOnly)",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Fetch user by id",
        "description": "This can only be done by the logged in user.",
        "operationId": "getUserById",
        "parameters": [
          {
            "schema": {},
            "name": "id",
            "in": "path",
            "description": "The id that needs to be fetched.",
            "required": true
          }
        ],
        "security": [
          {
            "accessToken": [],
            "xsrfToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "successfully operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user/update": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update currently logged user",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "security": [
          {
            "accessToken": [],
            "xsrfToken": []
          }
        ],
        "requestBody": {
          "description": "Updated user object",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successfully operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/user/delete": {
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete currently logged user",
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteUser",
        "security": [
          {
            "accessToken": [],
            "xsrfToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "successfully opetation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpMessage"
                }
              }
            }
          },
          "400": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/posts/": {
      "get": {
        "tags": [
          "post"
        ],
        "description": "This can only be done by the logged in user.",
        "summary": "Fetch all posts",
        "operationId": "getAllPosts",
        "security": [
          {
            "accessToken": [],
            "xsrfToken": []
          }
        ],
        "parameters": [
          {
            "name": "x-xsrf-token",
            "in": "header",
            "description": "x-xsrf-token that need to be fetch posts",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successfully operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllPostsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/posts/{id}": {
      "get": {
        "tags": [
          "post"
        ],
        "description": "This can only be done by the logged in user.",
        "summary": "Fetch post by id",
        "operationId": "getPostById",
        "security": [
          {
            "accessToken": [],
            "xsrfToken": []
          }
        ],
        "parameters": [
          {
            "name": "x-xsrf-token",
            "in": "header",
            "description": "x-xsrf-token that need to be fetch posts",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successfully operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPostByIdResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "post"
        ],
        "description": "This can only be done by the logged in user and the post is owned by the user",
        "summary": "Update post by id",
        "operationId": "updatePost",
        "security": [
          {
            "accessToken": [],
            "xsrfToken": []
          }
        ],
        "requestBody": {
          "description": "Update post object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "x-xsrf-token",
            "in": "header",
            "description": "x-xsrf-token that need to be fetch posts",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successfully operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPostByIdResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "post"
        ],
        "description": "This can only be done by the logged in user and the post is owned by the user",
        "summary": "Delete post by id",
        "operationId": "deletePost",
        "security": [
          {
            "accessToken": [],
            "xsrfToken": []
          }
        ],
        "parameters": [
          {
            "name": "x-xsrf-token",
            "in": "header",
            "description": "x-xsrf-token that need to be fetch posts",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successfully operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SignUpRequest": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "xsrfToken": {
            "type": "string"
          }
        }
      },
      "GetUserResponse": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "posts": {
            "type": "array",
            "items": {
              "minItems": 0,
              "type": "object",
              "required": [
                "id",
                "content",
                "media",
                "published_at",
                "updated_at"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "content": {
                  "type": "string"
                },
                "media": {
                  "type": "string"
                },
                "published_at": {
                  "type": "string",
                  "format": "date"
                },
                "updated_at":{
                  "type": "string",
                  "format": "date"
                }
              }
            }
          }
        }
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "currentPassword": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          },
          "profile_picture": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "HttpErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              }
            }
          }
        }
      },
      "ValidationErrorResponse": {
        "type": "object",
        "properties": {
          "validationError": {
            "type": "object",
            "properties": {
              "propertyName": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "context": {
                    "type": "array",
                    "items": {
                      "minItems": 1,
                      "type": "object",
                      "required": [
                        "label",
                        "value",
                        "invalids",
                        "key"
                      ],
                      "properties": {
                        "label": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        },
                        "invalids": {
                          "type": "array",
                          "items": {
                            "minItems": 1,
                            "required": [
                              "invalid"
                            ]
                          },
                          "properties": {
                            "invalid": {
                              "type": "string"
                            }
                          }
                        },
                        "key": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "type": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "GetAllPostsResponse": {
        "type": "array",
        "items": {
          "minItems": 1,
          "type": "object",
          "required": [
            "id",
            "content",
            "media",
            "created_at",
            "updated_at",
            "published_at",
            "User"
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "content": {
              "type": "string"
            },
            "media": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "format": "date"
            },
            "updated_at": {
              "type": "string",
              "format": "date"
            },
            "published_at": {
              "type": "string",
              "format": "date"
            },
            "User": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "GetPostByIdResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date"
          },
          "updated_at": {
            "type": "string",
            "format": "date"
          },
          "User": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "profile_picture": {
            "type": "string"
          }
        }
      },
      "Post": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "media": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "HttpMessage": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "accessToken": {
        "type": "apiKey",
        "in": "cookie",
        "name": "access_token"
      },
      "refreshToken": {
        "type": "apiKey",
        "in": "cookie",
        "name": "refrsh_token"
      },
      "xsrfToken": {
        "type": "apiKey",
        "in": "header",
        "name": "x-xsrf-token"
      },
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    }
  }
}